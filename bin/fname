#!/usr/bin/python2
#======================================================================#
# EASY FILE RENAMER                              (c) 2015 P. S. Clarke #
#======================================================================#


"""
The first argument is taken to be the source file.

All subsequent arguments are concatenated with spaces and used as
the destination.  The extension from the source file is automatically
added.

This makes it easy to give human names to autogenerated files, like
digital photos or scanned documents.

For example:

    $ fname IMG_00354.jpg John and Garry at Skegness

will rename it to "John and Garry at Skegness.jpg", without any need
to juggle escape characters or file extensions.
"""


import os
import sys
import unittest


def usage(executable):
    return "".join((
        "Usage:\n  ", executable, " srcfilepath.ext New File Name...",
    ))


def valid_arguments(args):
    return len(args) >= 2


def extension_of(filename):
    parts = filename.split('.')
    if len(parts) < 2:
        return None
    return parts[-1]


def destination_of(arguments):
    extension = extension_of(arguments[0])
    destination = " ".join(arguments[1:])
    if extension is not None:
        destination = "%s.%s" % (destination, extension)
    return destination


def main(args):
    if not valid_arguments(args[1:]):
        print usage(args[0])
        sys.exit(1)
    src_path = args[1]
    if not os.path.exists(src_path):
        print "Path does not exist: %r" % src_path
        sys.exit(1)
    dest_path = destination_of(args[1:])
    if os.path.exists(dest_path):
        print "Path already exists: %r" % dest_path
        sys.exit(1)
    os.rename(src_path, dest_path)
    print "Moved %r to %r." % (src_path, dest_path)


class TestFname(unittest.TestCase):

    def test_validation_of_args(self):
        f = valid_arguments
        self.assertTrue(f(['foo.pdf', 'New', 'Foo']))
        self.assertFalse(f([]))
        self.assertFalse(f(['foo.pdf']))

    def test_extraction_of_extension(self):
        f = extension_of
        self.assertEqual(f('foobar.pdf'), 'pdf')
        self.assertEqual(f('foobar'), None)

    def test_extraction_of_destination(self):
        f = destination_of
        self.assertEqual(f(['src', 'Foo']), "Foo")
        self.assertEqual(f(['src', 'Foo', 'Bar']), "Foo Bar")
        self.assertEqual(f(['src.jpeg', 'Foo', 'Bar']), "Foo Bar.jpeg")


if __name__ == '__main__':
    if '--test' in sys.argv:
        sys.argv = [sys.argv[0]]
        unittest.main()
    else:
        main(sys.argv)
