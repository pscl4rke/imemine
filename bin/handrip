#!/usr/bin/python2


import subprocess
import sys
import time


def on_battery():
    output = subprocess.check_output(["upower", "--dump"])
    battery_line = [line.strip() for line in output.splitlines()
                    if "on-battery" in line][0]
    if "yes" in battery_line:
        return True
    if "no" in battery_line:
        return False
    raise Exception()


class Ripper:

    def __init__(self, source, title, destination):
        self.source = source
        self.title = title
        assert destination.endswith(".mkv")
        self.destination = destination
        self.verbose = True
        #self.chapters = "31-36"
        self.chapters = None
        self.x264_preset = "veryslow"
        #self.x264_preset = "ultrafast"

    def x264_options(self):
        return []

    def ripping_arguments(self):
        args = ["HandBrakeCLI"]
        if self.verbose:
            args.append("--verbose")
        args.append("--decomb")
        args.extend(["--encoder", "x264"])
        args.extend(["--x264-preset", self.x264_preset])
        args.extend(["--encopts", ":".join(self.x264_options())])
        args.extend(["--vb", "685"])  # bitrate, kbps
        args.extend(["--gain", "5"])  # audio, dB
        args.append("--markers")
        args.extend(["--input", self.source])
        args.extend(["--title", str(self.title)])
        args.extend(["--output", self.destination])
        if self.chapters is not None:
            args.extend(["-c", self.chapters])
        return args

    def rip(self):
        start = time.time()
        subprocess.check_call(self.ripping_arguments())
        end = time.time()
        print "That took %i seconds" % (end - start)


if __name__ == '__main__':
    if on_battery():
        print "You're running on BATTEERY!"
        print "I'm not continuing!"
        sys.exit(1)
    ripper = Ripper(sys.argv[1], int(sys.argv[2]), sys.argv[3])
    ripper.rip()
    # sys.exit(...)
