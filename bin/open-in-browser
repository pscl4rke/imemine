#!/usr/bin/env bash
#======================================================================#
# WEB-BROWSING LAUNCH WRAPPER               (c) 2012-2020 P. S. Clarke #
#======================================================================#

# maybe /usr/bin, /maybe /snap/bin, maybe somewhere else...
firefox="$(which firefox-esr || which firefox)"
chromium="$(which chromium-browser || which chromium)"

if [[ -z "$chromium" ]]; then
    echo "Using flatpak"
    chromium="flatpak run com.github.Eloston.UngoogledChromium"
fi

urlclean="$(dirname "$0")/urlclean"

if [[ -e $firefox ]]
then
    browser="firefox"
else
    browser="chrome"
fi
mode="temp"

while [[ ! -z "$1" ]]; do
case "$1" in
    -b)
        shift
        browser="$1" ; shift
        ;;
    -p)
        mode="profile" ; shift
        profile="$1" ; shift
        ;;
    -u)
        shift
        urlclean="$1" ; shift
        ;;
    *)
        break
        ;;
esac
done

case "$1" in
    PRIMARY)
        url="$(xclip -o -selection primary)"
        ;;
    CLIPBOARD)
        url="$(xclip -o -selection clipboard)"
        ;;
    PROMPT)
        url="$(zenity --entry --text="URL" --title="URL")"
        [ -z "$url" ] && exit 1
        ;;
    *)
        url="$1"
        ;;
esac

url="$($urlclean "$url")"

case "$browser-$mode" in
    chrome-tempold)
        # --temp-profile handled badly by flatpak, snap, etc.
        # --temp-profile must be first if it is to be obeyed:
        $chromium --temp-profile --no-first-run \
            --no-default-browser-check "$url" 2>&1 >/dev/null
        ;;
    chrome-temp)
        profilepath="$(mktemp --directory /tmp/chromium.$$.XXXXXXX)"
        $chromium --user-data-dir="$profilepath" \
            --no-default-browser-check --new-window "$url" 2>&1 >/dev/null
        rm -r "$profilepath"
        ;;
    chrome-profile)
        $chromium --user-data-dir="$HOME/.config/chromium-$profile" \
            --no-default-browser-check --new-window "$url" 2>&1 >/dev/null
        ;;
    firefox-temp)
        profilepath="$(mktemp --directory /tmp/firefox.$$.XXXXXXX)"
        [ -e ~/.firefox.base.tar ] && (
            cd "$profilepath"
            tar xf ~/.firefox.base.tar)
        [ -e ~/.firefox.base.d ] && cp -arL ~/.firefox.base.d/* "$profilepath/."
        [ ! -z "$WAYLAND_DISPLAY" ] && export MOZ_ENABLE_WAYLAND=1
        $firefox -no-remote -profile "$profilepath" "$url" 2>&1 >/dev/null
        rm -r "$profilepath"
        ;;
    firefoxreader-temp)
        profilepath="$(mktemp --directory /tmp/firefox.$$.XXXXXXX)"
        [ -e ~/.firefox.base.tar ] && (
            cd "$profilepath"
            tar xf ~/.firefox.base.tar)
        [ -e ~/.firefox.base.d ] && cp -arL ~/.firefox.base.d/* "$profilepath/."
        [ ! -z "$WAYLAND_DISPLAY" ] && export MOZ_ENABLE_WAYLAND=1
        $firefox -no-remote -profile "$profilepath" "about:reader?url=$url" 2>&1 >/dev/null
        rm -r "$profilepath"
        ;;
    firefox-profile)
        profilepath="$HOME/.config/firefox-$profile"
        mkdir "$profilepath"
        [ -e ~/.firefox.base.tar ] && (
            cd "$profilepath"
            tar xf ~/.firefox.base.tar)
        [ -e ~/.firefox.base.d ] && cp -arL ~/.firefox.base.d/* "$profilepath/."
        [ ! -z "$WAYLAND_DISPLAY" ] && export MOZ_ENABLE_WAYLAND=1
        $firefox -no-remote -profile "$profilepath" "$url" 2>&1 >/dev/null
        ;;
    qutebrowser-temp)
        profilepath="$(mktemp --directory /tmp/qutebrowser.$$.XXXXXXX)"
        $HOME/.virtualenvs/qutebrowser/bin/qutebrowser \
            --basedir "$profilepath" \
            --config-py "$HOME/imemine/qutebrowser_config.py" \
            "$url" 2>&1 >/dev/null
        rm -r "$profilepath"
        ;;
    *)
        echo "Unknown: $browser-$mode"
        zenity --error --title "$0" --text "Unknown: $browser-$mode"
        ;;
esac
