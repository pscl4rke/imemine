#!/usr/bin/python3
#======================================================================#
# URL CLEANER                                 (c) 2020-21 P. S. Clarke #
#======================================================================#






# FIXME - change http to https







import contextlib
import os
import unittest
import urllib.parse
import sys


def clean(original):
    if "/embed/" in original:
        return original
    splitfixed = original.strip().lstrip('+').replace("\n+", "")
    splitfixed = "".join(c for c in splitfixed if 31 < ord(c) < 127)
    if "://" in splitfixed:
        guess_scheme = splitfixed
    else:
        if os.path.exists(splitfixed):
            guess_scheme = "file://%s" % os.path.abspath(splitfixed.strip())
        else:
            guess_scheme = "http://%s" % splitfixed.strip()
    url = urllib.parse.urlparse(guess_scheme)
    if url.netloc.endswith(".be"):
        return clean_shortner(url)
    if "/shorts/" in url.path:
        v = url.path.replace("/shorts/", "")
    else:
        v = dict(urllib.parse.parse_qsl(url.query))['v']
    p = "/embed/%s" % v
    url = url._replace(query={}, path=p)
    if url.fragment.startswith("."):
        url = url._replace(fragment="")
    return url.geturl()


def clean_shortner(url):
    return "https://www." + url.netloc.replace(".", "") + ".com/embed" + url.path


@contextlib.contextmanager
def pushd(nested):
    cwd = os.getcwd()
    try:
        os.chdir(nested)
        yield
    finally:
        os.chdir(cwd)


class TestClean(unittest.TestCase):

    def test_normal_link(self):
        self.assertEqual(clean("https://www.thewebsite.com/watch?v=-65_ae"),
                               "https://www.thewebsite.com/embed/-65_ae")

    def test_shortener_link(self):
        self.assertEqual(clean("https://thewebsi.be/-65_ae"),
                               "https://www.thewebsibe.com/embed/-65_ae")

    def test_alternative_link(self):
        self.assertEqual(clean("https://www.thewebsite.com/shorts/-65_ae"),
                               "https://www.thewebsite.com/embed/-65_ae")

    def test_a_link_that_is_already_right(self):
        self.assertEqual(clean("https://www.thewebsite.com/embed/-65_ae"),
                               "https://www.thewebsite.com/embed/-65_ae")


if __name__ == '__main__':
    if sys.argv[1] == "--test":
        sys.argv = sys.argv[:1]
        unittest.main()
    else:
        original = sys.argv[1]
        print(clean(original))
