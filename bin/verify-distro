#!/usr/bin/python3


import getpass
import glob
import grp
import os
from os.path import expanduser
import subprocess
import unittest


def shell(cmdline: str) -> str:
    proc = subprocess.run(["bash", "-c", cmdline], check=True, capture_output=True)
    return proc.stdout.decode()


class TestSystem(unittest.TestCase):

    def test_cal_makes_wednesday_the_hump_day(self):
        output = shell("cal")
        self.assertIn("Su Mo Tu We Th Fr Sa", output)

    def test_bash_completion_is_installed(self):
        path = "/usr/share/bash-completion/bash_completion"
        self.assertTrue(os.path.exists(path))

    def test_there_isnt_an_outofdate_downloader(self):
        path = "/usr/bin/yt-dlp"
        self.assertFalse(os.path.exists(path))

    def test_whoopsie_isnt_watching_for_crashes(self):
        with self.assertRaises(subprocess.CalledProcessError):
            shell("systemctl is-active whoopsie.service")
        with self.assertRaises(subprocess.CalledProcessError):
            shell("systemctl is-active whoopsie.path")

    def test_i_dont_have_snaps_to_worry_about(self):
        # On *buntu try a "minimal installation" and find an
        # alternative source for firefox/chromium.
        with self.assertRaises(subprocess.CalledProcessError):
            shell("ps -f | grep sn[a]p")  # don't match grep!


class TestSession(unittest.TestCase):

    def test_lxsession_isnt_creating_big_logfiles(self):
        paths = glob.glob(expanduser("~/.config/**/debug.log"))
        self.assertEqual(paths, [])  # was ~/.config/lxqt/debug.log

    def test_the_gnome_settings_daemon_isnt_around(self):
        # gsd-housekeeping.service
        self.assertNotIn("gsd", shell("systemctl --user"))

    def test_the_gnome_file_indexing_isnt_around(self):
        # tracker-extract, tracker-miner-fs, tracker-store
        self.assertNotIn("tracker", shell("systemctl --user"))


class TestSkeletonFiles(unittest.TestCase):

    def test_xdg_files_on_the_desktop(self):
        # Note that if you try to delete these pcmanfm will "helpfully"
        # add them back next time you log in.  So instead run
        # "pcmanfm-qt --desktop-pref advanced" or fiddle the config file.
        paths = glob.glob(expanduser("~/Desktop/*.desktop"))
        self.assertEqual(paths, [])


class TestUser(unittest.TestCase):

    def test_i_have_sudo_privileges(self):
        sudo = grp.getgrnam("sudo").gr_mem
        self.assertIn(getpass.getuser(), sudo)

    def test_i_have_logfile_privileges(self):
        adm = grp.getgrnam("adm").gr_mem
        self.assertIn(getpass.getuser(), adm)


class TestWebBrowser(unittest.TestCase):

    def test_envvar_browser(self):
        # As used by sensible-browser and Python's webbrowser module
        #   To set permanently edit ~/.config/lxqt/session.conf
        self.assertIn("open-in-browser-bg", os.environ["BROWSER"])

    def test_xdg_database(self):
        # As used by xdg-open
        #   To set first you have to "unset BROWSER" in the current shell and
        #   then "xdg-settings set default-web-browser open-in-browser-bg.desktop"
        self.assertIn("open-in-browser-bg",
                      shell("xdg-settings get default-web-browser"))


if __name__ == "__main__":
    unittest.main()
