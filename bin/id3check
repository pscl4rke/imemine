#!/usr/bin/python3


import os
import sys

import mutagen


# improve genre checking
# check id3v1 data matches id3v2 data
# check filename matches id3v2 data
# check album art present
# check classical music for Composer etc
# perhaps check the year


def check(path_to_check):
    if os.path.isdir(path_to_check):
        raise NotImplementedError("Cannot check folders yet!")
    if path_to_check.endswith(".mp3"):
        yield from check_from_wipe_mp3_junk_script(path_to_check)
        yield from check_track_numbering(path_to_check)
        yield from check_genre(path_to_check)


def check_from_wipe_mp3_junk_script(path_to_check):
    # See imemine/bin/wipe-mp3-junk for a script that cleans up the mp3
    # files but I keep forgetting exists.
    src = mutagen.File(path_to_check)
    for prefix in ["TXXX", "TSSE", "TENC", "TDEN", "TLEN", "TBPM", "TFLT", "TPOS",
                   "TMED", "TCOP", "TPUB", "APIC", "PRIV", "MCDI", "COMM", "TCMP"]:
        for key in src:
            if key.startswith(prefix):
                yield path_to_check, "Contains key %r saying %r" % (key, src[key])


def check_track_numbering(path_to_check):
    src = mutagen.File(path_to_check)
    if "TRCK" not in src:
        yield path_to_check, "Missing track number"
    else:
        if "/" not in src["TRCK"].text[0]:
            yield path_to_check, "Track number missing total number of tracks"


def check_genre(path_to_check):
    src = mutagen.File(path_to_check)
    if "TCON" not in src:
        yield path_to_check, "Missing genre"
        return
    genre = src["TCON"].text[0]
    if genre == "":
        yield path_to_check, "Blank genre"
    if ";" in genre:
        yield path_to_check, "Invalid multigenre"


def main():
    for path_to_check in sys.argv[1:]:
        for path, problem in check(path_to_check):
            print("%s: %s" % (path, problem[:200]))


if __name__ == '__main__':
    main()
