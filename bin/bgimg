#!/usr/bin/python3


# Future: run pcmanfm-qt -w to install CURRENT-LINK


import argparse
import os
import shutil
import subprocess
import sys


def picture_dir():
    return os.path.join(os.environ["HOME"], ".backs")


def ensure_dir_exists():
    if not os.path.exists(picture_dir()):
        print(f"NOTE: Creating {picture_dir()!r}...")
        os.mkdir(picture_dir())


def available():
    files = [p for p in os.listdir(picture_dir())
             if p not in ("CURRENT-LINK",)]
    files.sort()
    return files


def set_background(filename_without_path: str) -> None:
    link = os.path.join(picture_dir(), "CURRENT-LINK")
    # the "or" is to handle both working and broken symlinks
    if os.path.exists(link) or os.path.islink(link):
        os.remove(link)
    os.symlink(filename_without_path, link)


def parse_args(args):
    parser = argparse.ArgumentParser()
    sub = parser.add_subparsers(dest="subcommand", required=True)
    sub.add_parser("add").add_argument("imagepath", nargs="+")
    sub.add_parser("list")
    sub.add_parser("set").add_argument("desired")
    sub.add_parser("pick")
    return parser.parse_args(args)


def main():
    opts = parse_args(sys.argv[1:])
    ensure_dir_exists()
    if opts.subcommand == "add":
        for file in opts.imagepath:
            shutil.copy(file, picture_dir())
    elif opts.subcommand == "list":
        for file in available():
            print(file)
    elif opts.subcommand == "set":
        set_background(opts.desired)
    elif opts.subcommand == "pick":
        # using pick here, could try fzf instead
        p = subprocess.run(["pick"], capture_output=True,
                           input="\n".join(available()).encode() + b"\n")
        if p.returncode != 0:
            raise Exception("No image picked")
        set_background(p.stdout.decode().rstrip("\n"))
    else:
        raise Exception("Unknown command: %r" % opts.subcommand)


if __name__ == "__main__":
    main()
