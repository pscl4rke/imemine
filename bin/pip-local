#!/usr/bin/python3
#======================================================================#
# PIP OFFLINE CACHE MANAGER                      (c) 2018 P. S. Clarke #
#======================================================================#


import sys
import subprocess


class PipLocal:

    local_dir = "/home/psc/pip-local"

    def main(self, args):
        # FIXME: Please replace with proper argparse stuff
        command = args[1] if len(args)> 1 else "usage"
        if command == "fetch":
            version = args[2].lstrip("-")
            requirements = args[3]
            pip = "/home/psc/.virtualenvs/pip%s/bin/pip%s" % (version, version)
            self.run([pip, "download", "-r", requirements, "-d", self.local_dir])
        elif command == "install":
            requirements = args[2]
            self.run(["pip", "install", "--no-index", "-r", requirements,
                      "-f", "file://%s" % self.local_dir])
        elif command == "new":
            version = args[2].lstrip("-")
            # this is newer than the one from APT, so works offline:
            virtualenv = "/home/psc/.virtualenvs/virtualenv/bin/virtualenv"
            dest = "/home/psc/.virtualenvs/%s" % args[3]
            self.run([virtualenv, "-p", "/usr/bin/python%s" % version, dest])
            print("Remember to source...")
            print("  %s/bin/activate" % dest)
        else:
            print("Usage:")
            print("  pip-local fetch -2|-3 /path/to/requirements.txt")
            print("  pip-local new -2|-3 name")
            print("  pip-local install /path/to/requirements.txt")

    def run(self, args):
        print(repr(args))
        subprocess.check_call(args)


if __name__ == '__main__':
    PipLocal().main(sys.argv)
