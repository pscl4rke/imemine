#!/usr/bin/python3
#
#======================================================================#
# MPD-TO-LIBNOTIFY TOOL                     (c) 2012,2018 P. S. Clarke #
#======================================================================#

# Find a way to run this in the background when you log in.
# For example, using $HOME/.config/autostart.

# Dependencies:
#   -   MPD and `python3-musicpd` package or equivalent
#   -   libnotify and `python3-notify2` package or equivalent

# Bugs:
#   -   On launch, will always announce head of playlist even if
#       not playing.
#   -   Assumes MPD running on localhost


# ONE-SHOT KEYBINDING


import os
import sys
#import time
import traceback

import musicpd

import notify2
notify2.init("mpd-notifier")
# Use one notification, to stop new popups for each song
NOTIFICATION = notify2.Notification("FOO")


def notify(identifier):
    try:
        NOTIFICATION.update(*identifier)
        NOTIFICATION.show()
    except Exception:
        traceback.print_exp()


def image_for(relative_song_path):
    if relative_song_path is None:
        return ""  # FIXME
    relative_dir = os.path.dirname(relative_song_path)
    patterns = [
        "/srv/music/DIR/Folder.jpg", "/srv/Music/DIR/Folder.jpg",
        "/srv/jukebox/DIR/Folder.jpg", "/srv/Jukebox/DIR/Folder.jpg",
        "/mnt/juke/box/DIR/Folder.jpg",
        "/home/psc/imemine/vendor/audio-x-generic.png",
    ]
    for pattern in patterns:
        path = pattern.replace("DIR", relative_dir)
        if os.path.exists(path):
            return path
    raise Exception("Absolutely no image possible for %r" % relative_song_path)


def get_song_and_notify(client, loop_afterwards=True):
    last_identifier = (None, None, None)
    while True:
        song_data = client.currentsong()
        icon = image_for(song_data.get('file', None))
        title = song_data.get("title", "Unknown")
        track = song_data.get("track", "??/??")
        album = song_data.get("album", "Unknown")
        artist = song_data.get("artist", "Unknown")
        albumartist = song_data.get("albumartist", "Unknown")
        if len(song_data) > 0:
            identifier = (title, "%s\n%s" % (album, artist), icon)
        else:
            identifier = ("Playlist Empty", "", icon)
        if identifier != last_identifier:
            notify(identifier)
            last_identifier = identifier
        if not loop_afterwards:
            break
        #time.sleep(2)
        #client.idle("player")
        client.idle()


def main():
    try:
        client = musicpd.MPDClient()
        client.connect("localhost", 6600)
        print(repr(sys.argv))
        if "--once" in sys.argv:
            get_song_and_notify(client, loop_afterwards=False)
        else:
            get_song_and_notify(client, loop_afterwards=True)
    finally:
        del client  # FIXME won't this happen anyway???


if __name__ == '__main__':
    main()
