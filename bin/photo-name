#!/usr/bin/python3


"""
Photograph Directory Renamer
----------------------------

(c) 2013,2017 P S Clarke

This is a highly opiniated script that I can use for renaming a directory
and all the photos contained in it to match my standard format:

    ./YYMMDD-NameOfPhotoShoot/YYMMDD-NameOfPhotoShoot NNN.jpg

It has been fairly hastily thrown together to partially replace an old
Windows tool that I had been using.
"""


import datetime
import sys
import os


def confirm():
    response = input('Continue? [y/n] ')
    assert response in ('y', 'n')
    return (response == 'y')


# This is an ugly function that could do with refactoring!
def rename_photoshoot(directory, shoot_name):
    """Rename the given directory and contents with the given name."""
    # Validate the directory:
    if not os.path.isdir(directory):
        print("%r is not a directory" % directory)
        return 1
    current_filenames = os.listdir(directory)
    if len(current_filenames) < 1:
        print("%r is an empty directory" % directory)
        return 1
    for filename in current_filenames:
        if not filename.endswith('.JPG'):
            print("%r doesn't look like a photo to me!" % filename)
            return 1
    # Find out the date of the photos:
    all_dates = all_dates_of_files_in(directory)
    print("HELP! I can't be sure of the date of the photos")
    for date in all_dates:
        print("  I see some photos from %s" % date)
    print("Please look for me and give it in YYMMDD format:")
    shoot_date = input("Date: ")
    if len(shoot_date) != 6:
        print("%r is an invalid date" % shoot_date)
    # Renaming:
    shoot_directory = "%s-%s" % (shoot_date, shoot_name)
    print("This will use %s" % shoot_directory)
    if not confirm():
        print("Cancelled")
        return 1
    print("Renaming %s to %s" % (directory, shoot_directory))
    os.rename(directory, shoot_directory)
    for index, current_filename in enumerate(sorted(current_filenames)):
        new_filename = "%s %03i.jpg" % (shoot_directory, index + 1)
        print("Renaming %s to %s" % (current_filename, new_filename))
        os.rename(os.path.join(shoot_directory, current_filename),
                  os.path.join(shoot_directory, new_filename))
    return 0


def all_dates_of_files_in(source_directory):
    dates = set()
    for filename in os.listdir(source_directory):
        mtime = os.path.getmtime(os.path.join(source_directory, filename))
        date = datetime.datetime.fromtimestamp(mtime).strftime("%y%m%d")
        dates.add(date)
    return dates


def build_shoot_name(words):
    """Return a string formed from concatenating command line arguments."""
    titled = [ word.title().replace(" ", "") for word in words ]
    return "".join(titled)


def basename(path):
    """Returns the file name at the end of a file path."""
    return path.split('/')[-1]


def usage(program_name):
    """Return a string explaining command line usage."""
    return "\n".join((
        "Usage:",
        "  %s <directory> Name Of Photo Shoot..." % basename(program_name),
    ))


def main():
    """Main routine for handling launch via the command line."""
    arguments = sys.argv[1:]
    if len(arguments) < 2:
        print(usage(sys.argv[0]))
        sys.exit(1)
    directory = arguments[0]
    shoot_name = build_shoot_name(arguments[1:])
    exit_code = rename_photoshoot(directory, shoot_name)
    sys.exit(exit_code)


if __name__ == '__main__':
    main()
