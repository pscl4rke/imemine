#!/bin/bash
set -eu



# Note, this has been developed against GPG v1. Still needs testing against v2.
# Also, it uses ".pubkey" now, not ".PUB.key", because my webhost started
# blocking those with 403 errors



# GET AND CHECK THE ARGUMENTS

if [[ $# -eq 0 ]]; then
    echo "Usage:"
    echo "  $0 filenameprefix [arg1, arg2, ...]"
    echo "which will run gen-key with any optional arguments and create"
    echo "filenameprefix.key and filenameprefix.pubkey"
    exit 1
fi

outputroot="$1"
shift

secretkey="$outputroot.key"
if [[ -e "$secretkey" ]]; then
    echo "Already exists: $secretkey"
    exit 1
fi

publickey="$outputroot.pubkey"
if [[ -e "$publickey" ]]; then
    echo "Already exists: $publickey"
    exit 1
fi



### SET UP TEMPORARY ENVIRONMENT

export GNUPGHOME="$(mktemp -d)/gnupg"
mkdir "$GNUPGHOME"
chmod 700 "$GNUPGHOME"

runonexit() {
    rm -r "$(dirname "$GNUPGHOME")"
}
trap runonexit EXIT



### RUN PROGRAME HERE

echo
echo "Preparing the home directory..."
gpg --list-keys

echo
echo "Generating a key..."
time gpg --gen-key "$@"

echo
echo "Current status..."
gpg --list-keys

echo
echo "Exporting the secret key..."
gpg --armor --export-secret-key > "$secretkey"
echo "Wrote $secretkey"

echo
echo "Exporting the public key..."
gpg --armor --export > "$publickey"
echo "Wrote $publickey"

echo
echo Done.
